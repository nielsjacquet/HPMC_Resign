#!/usr/bin/env bash
/iOSEnabler "$agentFolder/$ogIpa" -codesign $codesign -p "$provisioningProfilePath" -v -V -n "$ogIpa" -d "$signedAgentsFolder/$dateDir"
echo "__________              .__                 ____ _________________________    _____                         __          "
echo "\______   \ ____   _____|__| ____   ____   |    |   \_   _____/\__    ___/   /  _  \    ____   ____   _____/  |_  ______"
echo " |       _// __ \ /  ___/  |/ ___\ /    \  |    |   /|    __)    |    |     /  /_\  \  / ___\_/ __ \ /    \   __\/  ___/"
echo " |    |   \  ___/ \___ \|  / /_/  >   |  \ |    |  / |     \     |    |    /    |    \/ /_/  >  ___/|   |  \  |  \___ \ "
echo " |____|_  /\___  >____  >__\___  /|___|  / |______/  \___  /     |____|    \____|__  /\___  / \___  >___|  /__| /____  >"
echo "        \/     \/     \/  /_____/      \/                \/                        \//_____/      \/     \/          \/ "

cleanup()
{
  rm -rf "$tempFolder"
}

exitRoutine()
{
  cleanup
  exit 1
}

helpFunction()
{
  clear
  echo
  echo This script is drag and drop friendly,
  echo you can just drop the ipa file after using -i as option
  echo
  echo Correct use of the script:
  echo "Resign -v (version) -i (ipafile) -? or -h for help"
  echo
  cleanup
  exit 1
}

## Define the aruments that can be used in the script
while getopts "v:?:h:" opt
do
   case "$opt" in
      v ) versionArg="$OPTARG" ;;           # HPMC version argument
      ? ) helpFunction ;;                   # Print helpFunction in case parameter is non-existent
      h ) helpFunction ;;                   # Print helpFunction in case parameter is non-existent
   esac
done

## check if needed options are filled in before running the script
optionchecks()
{
# echo optionchecks
if [[ -z "$versionArg" ]]
  then
  helpFunction
fi
}

setVars()
{
  codesign="GZ75RPKBFF"
  fixDate=$(date +"%Y%m%d-%Hh%M")
  DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"        # Homedir
  profilePath="$DIR/_SharedResources/ProvisioningProfile"
  tempFolder="$DIR/_TEMP"
  extractFile="$tempFolder/test.txt"
}

## set the version specific variables
versionVars()
{
  if [[ -z "$versionArg" ]]
  then
    echo no verion used
    exitRoutine
  fi

  if [[ "$versionArg" = 3.5p5 ]]
    then
      resourcesPath="$DIR/HPMC3.5p5/Resources"
      iosJsPath="$resourcesPath/ios"
      agentFolder="$DIR/HPMC3.5p5/OriginalAgents"
    else
      echo
      echo no correct version is used
      helpFunction
  fi
}

## grab the provisioning Profile in the shared resources folder
getProfile()
{
  cd "$profilePath"
  provisioningProfile=$(ls | grep ".mobileprovision")
  provisioningProfile="$profilePath/$provisioningProfile"
  # echo provisioningProfile: $provisioningProfile
}

makeDestiationFolder()
{
  fixDateFolder="$DIR"/SignedIpas/Agents/"$fixDate"Agents-HPMCenabled-"$versionArg"
  mkdir "$fixDateFolder"
}

resigning()
{
  for agents in "$agentFolder"/*
   do
     ogIpa=$(echo "$(basename "$agents")")
     echo "$ogIpa"
     printf "${YELLOW}The ipa that will be signed: ${GREEN}$ogIpa${NC}\n"
     cd "$resourcesPath"
         ./iOSEnabler "$agentFolder/$ogIpa" -codesign $codesign -p "$provisioningProfilePath" -v -V -n "$ogIpa" -d "$fixDateFolder"
  done
}

copy()
{
  mkdir "$DIR/_TEMP"
  provDevices="$fixDateFolder/ProvisionedDevices.txt"
  LC_ALL=C sed -n '1, /<key>ProvisionedDevices/!p; /<key>ProvisionedDevices/p' "$provisioningProfile" >> $extractFile
  LC_ALL=C sed '1,/TeamIdentifier/!d' $extractFile >> "$provDevices"
  rm $extractFile
}
##--------------------------
## Calling the functions
optionchecks
setVars
versionVars
getProfile
makeDestiationFolder
resigning
copy
cleanup
open "$fixDateFolder"
